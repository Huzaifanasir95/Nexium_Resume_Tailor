name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Code Quality and Testing
  test:
    name: Test & Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: nexium-resume-tailor/package-lock.json
        
    - name: Install dependencies
      run: |
        cd nexium-resume-tailor
        npm ci
        
    - name: Run ESLint
      run: |
        cd nexium-resume-tailor
        npm run lint
      continue-on-error: true
        
    - name: Run TypeScript check
      run: |
        cd nexium-resume-tailor
        npx tsc --noEmit
        
    - name: Test database connections
      run: |
        cd nexium-resume-tailor
        node scripts/test-connections.js
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        
    - name: Build application
      run: |
        cd nexium-resume-tailor
        npm run build
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        N8N_WEBHOOK_URL: ${{ secrets.N8N_WEBHOOK_URL }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

  # Job 2: Deploy to Vercel (only on main branch)
  deploy:
    name: Deploy to Vercel
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: nexium-resume-tailor/package-lock.json
        
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      
    - name: Pull Vercel Environment Information
      run: |
        cd nexium-resume-tailor
        vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Build Project Artifacts
      run: |
        cd nexium-resume-tailor
        vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy Project Artifacts to Vercel
      run: |
        cd nexium-resume-tailor
        vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  # Job 3: Security Audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Run security audit
      run: |
        cd nexium-resume-tailor
        npm audit --audit-level=high
      continue-on-error: true
